{"version":3,"sources":["./src/app/views/users/users.component.html","./src/app/views/users/users-routing.module.ts","./src/app/views/users/users.component.css","./src/app/views/users/users.component.ts","./src/app/views/users/users.module.ts"],"names":[],"mappings":"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","file":"views-users-users-module.js","sourcesContent":["export default \"<div class=\\\"card-body\\\">\\n    <!-- Button trigger modal -->    \\n  </div>\\n  <div bsModal #infoModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" id=\\\"myModal\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-info\\\" role=\\\"document\\\">\\n    <form  #requestForm=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Add User</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"infoModal.hide()\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">          \\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <label style=\\\"padding: 7px\\\">Username</label>\\n                    <input type=\\\"text\\\" id=\\\"username\\\" name=\\\"username\\\" [(ngModel)]=\\\"model.username\\\"  class=\\\"form-control\\\" placeholder=\\\"Username\\\">               \\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <label style=\\\"padding: 7px\\\">Email</label>  \\n                    <input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"model.email\\\"  class=\\\"form-control\\\" placeholder=\\\"Email\\\"> \\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <label style=\\\"padding: 7px\\\">Password</label> \\n                    <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\"  class=\\\"form-control\\\" placeholder=\\\"password\\\">\\n                  </div>\\n                </div>          \\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <label for=\\\"exampleSelect1\\\">User Roles</label>\\n                    <select class=\\\"form-control\\\" id=\\\"roleid\\\" name=\\\"roleID\\\" [(ngModel)]=\\\"model.roleID\\\">\\n                      <option disabled selected=\\\"selected\\\" [value]=\\\"0\\\">Select Role</option>\\n                      <option *ngFor=\\\"let role of roles; let i = index\\\"  [value]=\\\"role.roleID\\\">                    \\n                        {{role.roleTitle}}\\n                      </option>\\n                    </select>\\n                  </div>\\n                </div>  \\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-secondary\\\" (click)=\\\"infoModal.hide()\\\">Close</button>        \\n          <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-success\\\">Submit</button>\\n        </div>\\n      </div><!-- /.modal-content -->\\n    </form>\\n    </div><!-- /.modal-dialog -->\\n  </div><!-- /.modal -->\\n  <div bsModal #EdituserModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" id=\\\"myModal\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-info\\\" role=\\\"document\\\">\\n    <form  #requestForm=\\\"ngForm\\\" (ngSubmit)=\\\"EdituserPost()\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Edit User</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"EdituserModal.hide()\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">          \\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <label style=\\\"padding: 7px\\\">Username</label>\\n                    <input type=\\\"text\\\" id=\\\"Username\\\" name=\\\"Username\\\" [(ngModel)]=\\\"mymodel.Username\\\"  class=\\\"form-control\\\" placeholder=\\\"Username\\\">               \\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <label style=\\\"padding: 7px\\\">Email</label>  \\n                    <input type=\\\"email\\\" id=\\\"Email\\\" name=\\\"Email\\\" [(ngModel)]=\\\"mymodel.Email\\\"  class=\\\"form-control\\\" placeholder=\\\"Email\\\"> \\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <label style=\\\"padding: 7px\\\">Password</label> \\n                    <input type=\\\"password\\\" id=\\\"Password\\\" name=\\\"Password\\\" [(ngModel)]=\\\"mymodel.Password\\\"  class=\\\"form-control\\\" placeholder=\\\"Password\\\">\\n                  </div>\\n                </div>          \\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <label for=\\\"exampleSelect1\\\">User Roles</label>\\n                    <select class=\\\"form-control\\\" id=\\\"RoleID\\\" name=\\\"RoleID\\\" [(ngModel)]=\\\"mymodel.RoleID\\\">\\n                      <option disabled selected=\\\"selected\\\" [value]=\\\"0\\\">Select Role</option>\\n                      <option *ngFor=\\\"let role of roles; let i = index\\\"  [value]=\\\"role.roleID\\\">                    \\n                        {{role.roleTitle}}\\n                      </option>\\n                    </select>\\n                  </div>\\n                </div>  \\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-secondary\\\" (click)=\\\"EdituserModal.hide()\\\">Close</button>        \\n          <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-success\\\">Submit</button>\\n        </div>\\n      </div><!-- /.modal-content -->\\n    </form>\\n    </div><!-- /.modal-dialog -->\\n  </div><!-- /.modal -->\\n  <!--/.card-->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Manage User\\n          <button type=\\\"button\\\" class=\\\"btn btn-info mr-1\\\" style=\\\"float: right;\\\" data-toggle=\\\"modal\\\" (click)=\\\"infoModal.show()\\\">\\n            Add User\\n          </button>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <br>\\n          <table class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\">\\n            <thead class=\\\"thead-light\\\">\\n              <tr>\\n                <th class=\\\"text-center\\\"><i class=\\\"icon-people\\\"></i></th>\\n                <th>User</th>\\n                <th class=\\\"text-center\\\">Role</th>\\n                <th class=\\\"text-center\\\">Email</th>\\n                <th>Activity</th>\\n                <th>Action</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let user of users; let i = index\\\">\\n                <td class=\\\"text-center\\\">\\n                  <div class=\\\"avatar\\\">\\n                    <img src=\\\"assets/images/User.png\\\" class=\\\"img-avatar\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n                    <span class=\\\"avatar-status badge-success\\\"></span>\\n                  </div>\\n                </td>\\n                <td>\\n                  <div>{{user.username}}</div>\\n                  <div class=\\\"small text-muted\\\">\\n                    <span>New</span> | Registered: {{user.createdDate | date:'MMM d, y, h:mm a'}}\\n                  </div>\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                  {{user.rolename}}\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                  <div>{{user.email}}</div>\\n                </td>\\n                <td>\\n                  <div class=\\\"small text-muted\\\">Last login</div>\\n                  <strong>{{user.lastActive | date:'MMM d, y, h:mm:ss a'}}</strong>\\n                </td>\\n                <td>\\n                  <span class=\\\"badge badge-danger\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"EditUser(user.id)\\\">Edit</span>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div><!--/.col-->\\n  </div><!--/.row-->\\n  <!-- <div *ngIf=\\\"roleid !== 9\\\">\\n    <div class=\\\"app flex-row align-items-center\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"clearfix\\\">\\n              <h1 class=\\\"float-left display-3 mr-4\\\">404</h1>\\n              <h4 class=\\\"pt-3\\\">Oops! You're lost.</h4>\\n              <p class=\\\"text-muted\\\">The page you are looking for was not found.</p>\\n            </div>\\n            <div class=\\\"input-prepend input-group\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    \\n  </div> -->\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsersComponent } from './users.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersComponent,\n    data: {\n      title: 'users'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsersRoutingModule { }\n","export default \"label {\\r\\n    width: 78px;\\r\\n}\\r\\ninput, select {\\r\\n    border: 1px solid #b3acac;\\r\\n    border-radius: 3px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvdXNlcnMvdXNlcnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjtBQUNBO0lBQ0kseUJBQXlCO0lBQ3pCLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJsYWJlbCB7XHJcbiAgICB3aWR0aDogNzhweDtcclxufVxyXG5pbnB1dCwgc2VsZWN0IHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNiM2FjYWM7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbn0iXX0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { UserService } from '../../_services/user.service';\nimport { User } from '../../_models/user';\nimport { Role } from '../../_models/Role';\nimport { RoleService } from '../../_services/role.service';\nimport { AuthService } from '../../_services/auth.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  users: User[];\n  user: User;\n  model: any = {};\n  mymodel: any = {};\n  roles: Role[];\n  roleid: any =  Number(localStorage.getItem('RoleID'));\n  @ViewChild('infoModal') public infoModal: ModalDirective;\n  @ViewChild('EdituserModal') public EdituserModal: ModalDirective;\n\n  constructor(private userService: UserService, private roleService: RoleService, private alertify: AlertifyService,\n    private route: ActivatedRoute, private router: Router, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.loadUsers();\n    this.loadRoles();\n  }\n  loadRoles() {\n    return this.roleService.getRoles().subscribe((roles: Role[]) => {\n      this.roles = roles;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n  loadUsers() {\n    return this.userService.getUsers().subscribe((users: User[]) => {\n      this.users = users;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n  register() {\n    if (!this.model.username) {\n      this.alertify.error('Select username');\n      return;\n    }\n    if (!this.model.email) {\n      this.alertify.error('Write email');\n      return;\n    }\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.model.email)) {\n      this.alertify.error('enter valid email');\n      return;\n    }\n    if (!this.model.password) {\n      this.alertify.error('Select password');\n      return;\n    }\n    if (!this.model.roleID) {\n      this.alertify.error('Select role');\n      return;\n    }\n    console.log(this.model);\n    this.authService.register(this.model).subscribe((users: User[]) => {\n      this.users = users;\n      this.model.username = '';\n      this.model.email = '';\n      this.model.password = '';\n      this.alertify.success('Registration Successful');\n      this.infoModal.hide();\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  EditUser(id: number) {\n    this.EdituserModal.show();\n    return this.userService.getUser(id).subscribe((user: User) => {\n      console.log(user);\n      this.mymodel.Id = user.id;\n      this.mymodel.Username = user.username;\n      this.mymodel.Email = user.email;\n      this.mymodel.Password = '';\n      this.mymodel.RoleID = user.roleId;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n  EdituserPost() {\n    if (!this.mymodel.Username) {\n      this.alertify.error('Enter username');\n      return;\n    }\n    if (!this.mymodel.Email) {\n      this.alertify.error('Write email');\n      return;\n    }\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.mymodel.Email)) {\n      this.alertify.error('Enter valid email');\n      return;\n    }\n    if (!this.mymodel.Password) {\n      this.alertify.error('Select password');\n      return;\n    }\n    if (!this.mymodel.RoleID) {\n      this.alertify.error('Select role');\n      return;\n    }\n    this.authService.EdituserPost(this.mymodel).subscribe((users: User[]) => {\n      this.users = users;\n      this.alertify.success('User Edited Successful');\n      this.EdituserModal.hide();\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nimport { UsersRoutingModule } from './users-routing.module';\nimport { UsersComponent } from './users.component';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [UsersComponent],\n  imports: [\n    UsersRoutingModule,\n    CommonModule,\n    ModalModule.forRoot(),\n    FormsModule\n  ]\n})\nexport class UsersModule { }\n"],"sourceRoot":"webpack:///"}